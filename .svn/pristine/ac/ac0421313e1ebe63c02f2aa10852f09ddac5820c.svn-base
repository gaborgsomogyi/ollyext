#include "stdafx.h"
#include "OllyExtPatch.h"


bool patchApply( HANDLE hProcess, void* address, BYTE* orig, BYTE* patch, DWORD size )
{
	PLUGIN_CHECK_ERROR( hProcess, return false;, NO_DEBUGGE );

	if( orig )
	{
		BOOL readSuccess = ReadProcessMemory( hProcess, address, orig, size, NULL );
		PLUGIN_CHECK_ERROR( readSuccess, return false;, UNABLE_TO_READ_MEMORY_AT, address );
	}

	BOOL writeSuccess = WriteProcessMemory( hProcess, address, patch, size, NULL );
	PLUGIN_CHECK_ERROR( writeSuccess, return false;, UNABLE_TO_WRITE_MEMORY_AT, address );

	return true;
}


bool patchApply( HANDLE hProcess, wchar_t* libName, char* procName, BYTE* orig, BYTE* patch, DWORD size )
{
	PLUGIN_CHECK_ERROR( hProcess, return false;, NO_DEBUGGE );

	HMODULE module = LoadLibrary( libName );
	PLUGIN_CHECK_ERROR( module, return false;, UNABLE_TO_FIND_MODULE, libName );

	FARPROC address = GetProcAddress( module, procName );
	if( !address )
	{
		wchar_t procNameW[TEXTLEN];
		Asciitounicode( procName, strlen( procName ), procNameW, TEXTLEN );
		PLUGIN_CHECK_ERROR( FALSE, return false;, UNABLE_TO_FIND_FUNCTION, libName, procNameW );
	}

	return patchApply( hProcess, (void*)address, orig, patch, size );
}
