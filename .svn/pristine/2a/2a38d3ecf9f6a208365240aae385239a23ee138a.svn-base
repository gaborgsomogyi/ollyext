#include "stdafx.h"
#include <hash_map>
#include "Core/Log.h"
#include "Core/Ini.h"
#include "Core/Remote.h"
#include "Custom.h"


#define CUSTOM_DEBUG
#define CUSTOM_PATCH_DIRECTORY ( L"CustomPatches" )
#define CUSTOM_PATCH_FIND_PATTERN ( L"CustomPatches/*.ini" )


static std::hash_map<std::wstring, bool> g_applied;


static bool dirExists( const wchar_t* dirName )
{
	DWORD attr = GetFileAttributes( dirName );
	if( attr == INVALID_FILE_ATTRIBUTES )
		return false;

	return ( attr & FILE_ATTRIBUTE_DIRECTORY ) != 0;
}


void customInit( void )
{
	if( !dirExists( CUSTOM_PATCH_DIRECTORY ) )
	{
		CreateDirectory( CUSTOM_PATCH_DIRECTORY, NULL );
	}
}


void customReset( void )
{
	g_applied.clear();
}


bool customApply( bool enabled )
{
	if( !enabled ) return true;

	WIN32_FIND_DATA findData;
	HANDLE hFind = FindFirstFile( CUSTOM_PATCH_FIND_PATTERN, &findData );
	if( hFind != INVALID_HANDLE_VALUE )
	{
		do
		{
			if( g_applied[findData.cFileName] ) continue;

#ifdef CUSTOM_DEBUG
			logMessage( L"%ws: Applying custom patch: %ws", dbgGetPluginName(), findData.cFileName );
#endif
			std::wstring iniFilePath = L".\\";
			iniFilePath.append( CUSTOM_PATCH_DIRECTORY );
			iniFilePath.append( L"\\" );
			iniFilePath.append( findData.cFileName );

			std::wstring patchName = iniReadString( iniFilePath.c_str(), L"Name" );
			std::wstring moduleName = iniReadString( iniFilePath.c_str(), L"Module" );
			std::wstring functionName = iniReadString( iniFilePath.c_str(), L"Function" );
			std::wstring patch = iniReadString( iniFilePath.c_str(), L"Patch" );

#ifdef CUSTOM_DEBUG
			logMessage( L"%ws:   Name: %ws", dbgGetPluginName(), patchName.c_str() );
			logMessage( L"%ws:   Module: %ws", dbgGetPluginName(), moduleName.c_str() );
			logMessage( L"%ws:   Function: %ws", dbgGetPluginName(), functionName.c_str() );
			logMessage( L"%ws:   Patch: %ws", dbgGetPluginName(), patch.c_str() );
#endif

			FARPROC procAddress = remoteGetProcAddress( dbgGetProcessHandle(), moduleName.c_str(), functionName.c_str() );
			if( !procAddress ) return false;

#ifdef CUSTOM_DEBUG
			logMessage( L"%ws: Applied custom patch: %ws", dbgGetPluginName(), findData.cFileName );
#endif
			g_applied[findData.cFileName] = true;
		} while( FindNextFile( hFind, &findData ) );
		FindClose( hFind );
	}

	return true;
}
